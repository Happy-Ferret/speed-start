<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="properties.css" type="text/css"?>
<!DOCTYPE dialog SYSTEM "chrome://sstart/locale/properties.dtd">
<dialog id="thumbnail-properties"
		title="&sstart.Properties;"
		onload="justoff.sstart.ThumbnailPropertiesXul.initialize();"
		ondialogaccept="justoff.sstart.ThumbnailPropertiesXul.onAccept();"
		ondialogcancel="justoff.sstart.ThumbnailPropertiesXul.onCancel();"
		persist="width height"
		xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<grid>
		<columns>
			<column/>
			<column flex="1"/>
		</columns>
		<rows>
			<row align="center">
				<label value="&sstartthumb.URL;:"/>
				<textbox id="url" type="autocomplete"
						 enablehistory="true" autocompletesearch="history"/>
				<button id="browseFile" label="&#x2026;"
						oncommand="justoff.sstart.ThumbnailPropertiesXul.browseFile();"/>
			</row>
			<row align="center">
				<label value="&sstartfolder.BackgroundColor;:"/>
				<textbox id="bgColor"/>
			</row>
			<row align="center">
				<label value="&sstartthumb.CustomImage;:"/>
				<textbox id="customImage" type="autocomplete" enablehistory="true"
						 autocompletesearch="history"/>
				<button id="browseCustomImage" label="&#x2026;"
						oncommand="justoff.sstart.ThumbnailPropertiesXul.browseCustomImage();"/>
			</row>
			<row align="center">
				<label value="&sstartthumb.Width;:"/>
				<textbox id="width"/>
			</row>
			<row align="center">
				<label value="&sstartthumb.Height;:"/>
				<textbox id="height"/>
			</row>
		</rows>
	</grid>

	<script src="../../namespace.js"/>
	<script src="../../utils.js"/>
	<script src="../../file.js"/>
	<script src="../../dom.js"/>
	<script>
	<![CDATA[
		justoff.sstart.ThumbnailPropertiesXul = new function () {

			var File = justoff.sstart.File
			var Dom = justoff.sstart.Dom
			var URL = justoff.sstart.URL

			this.initialize = function () {
				var properties = window.arguments[0].properties;
				Dom.get("url").value = properties.url || "";
				Dom.get("customImage").value = properties.customImage || "";
				Dom.get("bgColor").value = properties.background || "#FFFFFF";
				Dom.get("width").value = properties.width || "";
				Dom.get("height").value = properties.height || "";

				if (properties.isFolder) {
					Dom.get("url").readOnly = true;
					Dom.get("url").removeAttribute("enablehistory");
					Dom.get("browseFile").disabled = true;
				}
			}

			this.onAccept = function () {
				var properties = window.arguments[0].properties;
				var url = Dom.get("url").value;
				if (url != properties.url) properties.title = "";
				properties.url = !url || URL.getScheme(url) ? url : "http://" + url;
				properties.customImage = Dom.get("customImage").value;
				properties.background = (Dom.get("bgColor").value == "") ? "#FFFFFF" : Dom.get("bgColor").value;
				properties.width = Dom.get("width").value;
				properties.height = Dom.get("height").value;
			}

			this.onCancel = function () {
				window.arguments[0].properties = null;
			}

			this.browseFile = function () {
				var file = File.chooseFile("open");
				if (file) Dom.get("url").value = File.getFileURL(file);
			}

			this.browseCustomImage = function () {
				var file = File.chooseFile("open", ["images"]);
				if (file) Dom.get("customImage").value = File.getFileURL(file);
			}

		}
		]]>
  </script>
</dialog>
